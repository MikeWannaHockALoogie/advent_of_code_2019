#part 1
#base memory
memory = [1,0,0,3,1,1,2,3,1,3,4,3,1,5,0,3,2,9,1,19,1,5,19,23,2,9,23,27,1,27,5,31,2,31,13,35,1,35,9,39,1,39,10,43,2,43,9,
          47,1,47,5,51,2,13,51,55,1,9,55,59,1,5,59,63,2,6,63,67,1,5,67,71,1,6,71,75,2,9,75,79,1,79,13,83,1,83,13,87,1,
          87,5,91,1,6,91,95,2,95,13,99,2,13,99,103,1,5,103,107,1,107,10,111,1,111,13,115,1,10,115,119,1,9,119,123,2,6,
          123,127,1,5,127,131,2,6,131,135,1,135,2,139,1,139,9,0,99,2,14,0,0]
#starting position
address = 0
# defin function to detwermin out put from 2 inputs
def find_output(input_1,input_2,address = address):
    temp_memory = [i for i in memory]
    temp_memory[1] = input_1
    temp_memory[2] = input_2
    while temp_memory[address] in range(len(temp_memory)):
        if temp_memory[address] == 1:
            opcode_idx_1 = temp_memory[address+1]
            opcode_idx_2 = temp_memory[address+2]
            opcode_idx_3 = temp_memory[address+3]
            temp_memory[opcode_idx_3] = temp_memory[opcode_idx_1] + temp_memory[opcode_idx_2]
            address = address+4
        elif temp_memory[address] == 2:
            opcode_idx_1 = temp_memory[address+1]
            opcode_idx_2 = temp_memory[address+2]
            opcode_idx_3 = temp_memory[address+3]
            temp_memory[opcode_idx_3] = temp_memory[opcode_idx_1] * temp_memory[opcode_idx_2]
            address = address+4
        elif temp_memory[address] == 99:
            noun = temp_memory[1]
            verb = temp_memory[2]
            #print(noun)
            #print(verb)
            #print(noun*verb)
            return(temp_memory[0])
            break
# part 2 use previous function to find inputs necessry for desired output
def find_inputs(desired_outcome):
    for noun in range(100):
        for verb in range(100):
            if find_output(noun,verb) == desired_outcome:
                print(noun, verb, 100*noun+verb)
                return find_output(noun,verb)



# test 
print(find_output(12,2))
print(find_inputs(19690720))









